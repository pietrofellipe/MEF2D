        load "gmsh"
        verbosity = 0;
        mesh Th = gmshload("C:/Users/pietro/Desktop/MEF 2D/Nucleo_E_I - integral.msh");
        plot (Th, wait = 1, cmm = "Malha");

        // Definição das regions dentro do arquivo .geo
        // ar = 1
        // entreferro = 2
        // culatra inferior = 3
        // nucleo superior = 4
        // coil = 5
        // nucleo superior 2 = 6
        // nucleo superior 3 = 7
        // simetria = 101

        fespace ThP0(Th, P0);
        fespace ThP1(Th, P1);

        ThP0 reg = region;
        plot (reg, wait = 1, fill = 1, cmm = "Espacos P0");

        real mu0 = 4*pi*1e-7;
         
        ThP0 mu =mu0*(reg==1)
                +mu0*(reg==2) 
                +10000*mu0*(reg==3)
                +10000*mu0*(reg==4)
                +mu0*(reg==5)
                +10000*mu0*(reg==6)
                +10000*mu0*(reg==7);

        real area = int2d(Th, 5)(1);
        //cout << "Area do coil = " << area << endl;
        plot (mu, wait = 1, fill = 1, cmm = "regioes mu de 1000*u0 e de u0");

        real j=3200000.0; // (A/m^2) N=1000 e i=32A espira ampere-espira = 32 000 S = 0.01m^2
        real itotal = 32000;
        ThP1 a,w;
        solve laplace(a,w) = int2d(Th)((1./mu) * (dx(a)*dx(w) + dy(a)*dy(w)))   
                        -   int2d(Th, 5)(j*w)  
                        +   on (102, a = 0)
                        +   on (101, a = 0);

        plot (a, wait = 1, fill = true, value = 1, cmm = "rot a");

        
        real x1 = 0.1;
        real x2 = 0.2;
        real y3 = 0;

        //border entref_interno(t=x1, x2){x=t; y=y3; label=500; } //teste com border

        
        ThP0 Bx=dy(a), By=-dx(a);

                ThP0 normb = sqrt(Bx^2+By^2);
                real energiatotal = int2d(Th, 2)((Bx^2 + By^2)/(2*mu));
                real energiasqrt = int2d(Th)(normb^2)/(2*mu0);
                real indutanciaenergia = energiatotal*2/(j*area)^2;
                real indutanciafluxo = (1 * int1d(Th, 400)(-By)) / itotal;
                real indutanciafluxomedio = (1/itotal)* int2d(Th, 5)(a*j);

                cout << "Valor de B no entreferro interno" << normb(0.05,-0.01) << endl;
                cout << "Valor de B no entreferro externo" << normb(0.25,-0.01) << endl;
                cout << "Valor da energia " << energiatotal << endl;
                cout << "Valor da indutancia por energia " << indutanciaenergia << endl;
                cout << "Valor da indutancia por fluxo no entreferro " << indutanciafluxo << endl;
                cout << "Valor da indutancia por fluxo medio " << indutanciafluxo << endl;


                plot ([Bx, By], wait = 1, value = 1, cmm = "Bx By");
